// <auto-generated />
using CodingExam.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodingExam.Infrastructure.Migrations
{
    [DbContext(typeof(CodingExamContext))]
    [Migration("20211207161127_AddUser")]
    partial class AddUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodingExam.Domain.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("IncrementalRate")
                        .HasColumnType("float");

                    b.Property<double>("LowerBoundInterestRate")
                        .HasColumnType("float");

                    b.Property<int>("MaturityYears")
                        .HasColumnType("int");

                    b.Property<double>("PresentValue")
                        .HasColumnType("float");

                    b.Property<double>("UpperBoundInterestRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("CodingExam.Domain.Models.InterestDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FutureValue")
                        .HasColumnType("float");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<double>("PresentValue")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.ToTable("InterestDetails");
                });

            modelBuilder.Entity("CodingExam.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CodingExam.Domain.Models.InterestDetails", b =>
                {
                    b.HasOne("CodingExam.Domain.Models.Interest", "Interest")
                        .WithMany("InterestDetails")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("CodingExam.Domain.Models.Interest", b =>
                {
                    b.Navigation("InterestDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
